// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class GlobalMessage {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): GlobalMessage {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsGlobalMessage(
    bb: flatbuffers.ByteBuffer,
    obj?: GlobalMessage
  ): GlobalMessage {
    return (obj || new GlobalMessage()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  static getSizePrefixedRootAsGlobalMessage(
    bb: flatbuffers.ByteBuffer,
    obj?: GlobalMessage
  ): GlobalMessage {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new GlobalMessage()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  title(): string | null;
  title(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  title(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  body(): string | null;
  body(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  body(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  static startGlobalMessage(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  static addTitle(
    builder: flatbuffers.Builder,
    titleOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, titleOffset, 0);
  }

  static addBody(builder: flatbuffers.Builder, bodyOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, bodyOffset, 0);
  }

  static endGlobalMessage(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createGlobalMessage(
    builder: flatbuffers.Builder,
    titleOffset: flatbuffers.Offset,
    bodyOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    GlobalMessage.startGlobalMessage(builder);
    GlobalMessage.addTitle(builder, titleOffset);
    GlobalMessage.addBody(builder, bodyOffset);
    return GlobalMessage.endGlobalMessage(builder);
  }
}

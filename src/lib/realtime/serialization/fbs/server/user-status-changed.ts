// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { UserOnlineStatus } from '../../fbs/server/user-online-status.js';
import * as flatbuffers from 'flatbuffers';

export class UserStatusChanged {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): UserStatusChanged {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsUserStatusChanged(
    bb: flatbuffers.ByteBuffer,
    obj?: UserStatusChanged
  ): UserStatusChanged {
    return (obj || new UserStatusChanged()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsUserStatusChanged(
    bb: flatbuffers.ByteBuffer,
    obj?: UserStatusChanged
  ): UserStatusChanged {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new UserStatusChanged()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  userId(): string | null;
  userId(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  userId(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  onlineStatus(): UserOnlineStatus {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt8(this.bb_pos + offset) : UserOnlineStatus.offline;
  }

  statusMessage(): string | null;
  statusMessage(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  statusMessage(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  static startUserStatusChanged(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  static addUserId(builder: flatbuffers.Builder, userIdOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, userIdOffset, 0);
  }

  static addOnlineStatus(builder: flatbuffers.Builder, onlineStatus: UserOnlineStatus) {
    builder.addFieldInt8(1, onlineStatus, UserOnlineStatus.offline);
  }

  static addStatusMessage(builder: flatbuffers.Builder, statusMessageOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, statusMessageOffset, 0);
  }

  static endUserStatusChanged(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createUserStatusChanged(
    builder: flatbuffers.Builder,
    userIdOffset: flatbuffers.Offset,
    onlineStatus: UserOnlineStatus,
    statusMessageOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    UserStatusChanged.startUserStatusChanged(builder);
    UserStatusChanged.addUserId(builder, userIdOffset);
    UserStatusChanged.addOnlineStatus(builder, onlineStatus);
    UserStatusChanged.addStatusMessage(builder, statusMessageOffset);
    return UserStatusChanged.endUserStatusChanged(builder);
  }
}

// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GroupInvite {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): GroupInvite {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsGroupInvite(bb: flatbuffers.ByteBuffer, obj?: GroupInvite): GroupInvite {
    return (obj || new GroupInvite()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsGroupInvite(
    bb: flatbuffers.ByteBuffer,
    obj?: GroupInvite
  ): GroupInvite {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new GroupInvite()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  groupId(): string | null;
  groupId(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  groupId(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  groupTitle(): string | null;
  groupTitle(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  groupTitle(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  groupIconUrl(): string | null;
  groupIconUrl(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  groupIconUrl(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  inviterId(): string | null;
  inviterId(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  inviterId(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  static startGroupInvite(builder: flatbuffers.Builder) {
    builder.startObject(4);
  }

  static addGroupId(builder: flatbuffers.Builder, groupIdOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, groupIdOffset, 0);
  }

  static addGroupTitle(builder: flatbuffers.Builder, groupTitleOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, groupTitleOffset, 0);
  }

  static addGroupIconUrl(builder: flatbuffers.Builder, groupIconUrlOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, groupIconUrlOffset, 0);
  }

  static addInviterId(builder: flatbuffers.Builder, inviterIdOffset: flatbuffers.Offset) {
    builder.addFieldOffset(3, inviterIdOffset, 0);
  }

  static endGroupInvite(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createGroupInvite(
    builder: flatbuffers.Builder,
    groupIdOffset: flatbuffers.Offset,
    groupTitleOffset: flatbuffers.Offset,
    groupIconUrlOffset: flatbuffers.Offset,
    inviterIdOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    GroupInvite.startGroupInvite(builder);
    GroupInvite.addGroupId(builder, groupIdOffset);
    GroupInvite.addGroupTitle(builder, groupTitleOffset);
    GroupInvite.addGroupIconUrl(builder, groupIconUrlOffset);
    GroupInvite.addInviterId(builder, inviterIdOffset);
    return GroupInvite.endGroupInvite(builder);
  }
}

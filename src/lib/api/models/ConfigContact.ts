/* tslint:disable */
/* eslint-disable */
/**
 * ZapMe
 * Open source application to control things
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Contact information for ZapMe, e.g. email address, discord server, etc.
 * @export
 * @interface ConfigContact
 */
export interface ConfigContact {
    /**
     * Email address to contact the support of the service
     * @type {string}
     * @memberof ConfigContact
     */
    emailSupport: string;
    /**
     * Email address to contact the owner of the service
     * @type {string}
     * @memberof ConfigContact
     */
    emailContact: string;
    /**
     * Invite URL to the Discord server where users can get support
     * @type {string}
     * @memberof ConfigContact
     */
    discordInviteUrl: string;
}

/**
 * Check if a given object implements the ConfigContact interface.
 */
export function instanceOfConfigContact(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "emailSupport" in value;
    isInstance = isInstance && "emailContact" in value;
    isInstance = isInstance && "discordInviteUrl" in value;

    return isInstance;
}

export function ConfigContactFromJSON(json: any): ConfigContact {
    return ConfigContactFromJSONTyped(json, false);
}

export function ConfigContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigContact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailSupport': json['emailSupport'],
        'emailContact': json['emailContact'],
        'discordInviteUrl': json['discordInviteUrl'],
    };
}

export function ConfigContactToJSON(value?: ConfigContact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailSupport': value.emailSupport,
        'emailContact': value.emailContact,
        'discordInviteUrl': value.discordInviteUrl,
    };
}


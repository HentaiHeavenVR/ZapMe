/* tslint:disable */
/* eslint-disable */
/**
 * ZapMe
 * Open source application to control things
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IconSource } from './IconSource';
import {
    IconSourceFromJSON,
    IconSourceFromJSONTyped,
    IconSourceToJSON,
} from './IconSource';

/**
 * 
 * @export
 * @interface SocialEntry
 */
export interface SocialEntry {
    /**
     * The name of the social platform
     * @type {string}
     * @memberof SocialEntry
     */
    name?: string;
    /**
     * Uri to the target page on the platform
     * @type {string}
     * @memberof SocialEntry
     */
    uri?: string;
    /**
     * 
     * @type {IconSource}
     * @memberof SocialEntry
     */
    iconType?: IconSource;
    /**
     * The icon URI, fetched from source defined by ZapMe.Controllers.Api.V1.Config.Models.SocialEntry.IconSource
     * @type {string}
     * @memberof SocialEntry
     */
    icon?: string;
}

/**
 * Check if a given object implements the SocialEntry interface.
 */
export function instanceOfSocialEntry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SocialEntryFromJSON(json: any): SocialEntry {
    return SocialEntryFromJSONTyped(json, false);
}

export function SocialEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'iconType': !exists(json, 'icon_type') ? undefined : IconSourceFromJSON(json['icon_type']),
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
    };
}

export function SocialEntryToJSON(value?: SocialEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'uri': value.uri,
        'icon_type': IconSourceToJSON(value.iconType),
        'icon': value.icon,
    };
}


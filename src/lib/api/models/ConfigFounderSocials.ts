/* tslint:disable */
/* eslint-disable */
/**
 * ZapMe
 * Open source application to control things
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The social media accounts of the founder of ZapMe
 * @export
 * @interface ConfigFounderSocials
 */
export interface ConfigFounderSocials {
    /**
     * Uri pointing to a github account
     * @type {string}
     * @memberof ConfigFounderSocials
     */
    githubUri?: string | null;
    /**
     * Uri pointing to a twitter account
     * @type {string}
     * @memberof ConfigFounderSocials
     */
    twitterUri?: string | null;
    /**
     * Uri pointing to a reddit account
     * @type {string}
     * @memberof ConfigFounderSocials
     */
    redditUri?: string | null;
    /**
     * Uri pointing to a personal website
     * @type {string}
     * @memberof ConfigFounderSocials
     */
    websiteUri?: string | null;
    /**
     * Discord username, e.g. "username#1234"
     * @type {string}
     * @memberof ConfigFounderSocials
     */
    discordUsername?: string | null;
}

/**
 * Check if a given object implements the ConfigFounderSocials interface.
 */
export function instanceOfConfigFounderSocials(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfigFounderSocialsFromJSON(json: any): ConfigFounderSocials {
    return ConfigFounderSocialsFromJSONTyped(json, false);
}

export function ConfigFounderSocialsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigFounderSocials {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'githubUri': !exists(json, 'githubUri') ? undefined : json['githubUri'],
        'twitterUri': !exists(json, 'twitterUri') ? undefined : json['twitterUri'],
        'redditUri': !exists(json, 'redditUri') ? undefined : json['redditUri'],
        'websiteUri': !exists(json, 'websiteUri') ? undefined : json['websiteUri'],
        'discordUsername': !exists(json, 'discordUsername') ? undefined : json['discordUsername'],
    };
}

export function ConfigFounderSocialsToJSON(value?: ConfigFounderSocials | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'githubUri': value.githubUri,
        'twitterUri': value.twitterUri,
        'redditUri': value.redditUri,
        'websiteUri': value.websiteUri,
        'discordUsername': value.discordUsername,
    };
}


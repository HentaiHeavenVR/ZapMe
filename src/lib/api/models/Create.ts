/* tslint:disable */
/* eslint-disable */
/**
 * ZapMe
 * Open source application to control things
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Message sent to server to create a new account
 * @export
 * @interface Create
 */
export interface Create {
    /**
     * 
     * @type {string}
     * @memberof Create
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof Create
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof Create
     */
    email?: string;
    /**
     * 
     * @type {number}
     * @memberof Create
     */
    acceptedTosVersion?: number;
    /**
     * Response from google recaptcha request
     * @type {string}
     * @memberof Create
     */
    recaptchaResponse?: string;
}

/**
 * Check if a given object implements the Create interface.
 */
export function instanceOfCreate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateFromJSON(json: any): Create {
    return CreateFromJSONTyped(json, false);
}

export function CreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Create {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'acceptedTosVersion': !exists(json, 'acceptedTosVersion') ? undefined : json['acceptedTosVersion'],
        'recaptchaResponse': !exists(json, 'recaptcha_response') ? undefined : json['recaptcha_response'],
    };
}

export function CreateToJSON(value?: Create | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'password': value.password,
        'email': value.email,
        'acceptedTosVersion': value.acceptedTosVersion,
        'recaptcha_response': value.recaptchaResponse,
    };
}


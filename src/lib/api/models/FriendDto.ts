/* tslint:disable */
/* eslint-disable */
/**
 * ZapMe
 * Open source application to control things
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FriendDto
 */
export interface FriendDto {
    /**
     * 
     * @type {string}
     * @memberof FriendDto
     */
    friendId: string;
    /**
     * 
     * @type {string}
     * @memberof FriendDto
     */
    nickName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FriendDto
     */
    notes?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof FriendDto
     */
    friendedAt: Date;
}

/**
 * Check if a given object implements the FriendDto interface.
 */
export function instanceOfFriendDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "friendId" in value;
    isInstance = isInstance && "friendedAt" in value;

    return isInstance;
}

export function FriendDtoFromJSON(json: any): FriendDto {
    return FriendDtoFromJSONTyped(json, false);
}

export function FriendDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FriendDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'friendId': json['friendId'],
        'nickName': !exists(json, 'nickName') ? undefined : json['nickName'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'friendedAt': (new Date(json['friendedAt'])),
    };
}

export function FriendDtoToJSON(value?: FriendDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'friendId': value.friendId,
        'nickName': value.nickName,
        'notes': value.notes,
        'friendedAt': (value.friendedAt.toISOString()),
    };
}

